@model BudgetTracker.Models.Budget

<div class="container-fluid py-4 bg-dark text-light">
    <div class="d-flex flex-column align-items-center">

        <!-- Main Content -->
        <div class="col-lg-8">

            <!-- Hero Section -->
            <div class="text-center mb-5">
                <h1 class="fw-bold" style="font-size: 2.5rem;">@Model.Name</h1>
            </div>

            <!-- Budget Details Card -->
            <div class="card border-0 shadow-sm mb-4 bg-secondary text-light">
                <div class="card-body">
                    <!-- Header for the Budget Information Section -->
                    <h4 class="fw-bold mb-3">
                        <i class="fas fa-wallet text-light me-2"></i>Budget Information
                    </h4>
                    
                    <!-- Budget Creation Date -->
                    <small class="text-light">Created on: @Model.DateCreated.ToShortDateString()</small>

                    <!-- Budget Financial Details -->
                    <div class="my-3">
                        <!-- Total Budget -->
                        <div>
                            <strong>Total Budget:</strong> @Model.TotalAmount.ToString("C")
                        </div>

                        <!-- Total Allocated Amount -->
                        <div>
                            <strong>Total Allocated:</strong> @Model.TotalAllocatedInitial.ToString("C")
                        </div>

                        <!-- Remaining Budget -->
                        <div>
                            <strong>Remaining Amount:</strong>
                            <span class="fw-bold @(Model.RemainingAmount >= 0 ? "text-success" : "text-danger")">
                                @Model.RemainingAmount.ToString("C")
                            </span>
                        </div>
                    </div>

                    <!-- Button to Add a New Category -->
                    <a class="btn custom-create-btn btn-sm" 
                       href="@Url.Action("Create", "Category", new { budgetId = Model.Id })">
                        <i class="fas fa-folder-plus me-1"></i>Add Category
                    </a>
                </div>
            </div>

            <!-- Categories Section -->
            <div class="card border-0 shadow-sm bg-secondary text-light">
                <div class="card-body">
                    <!-- Section Title -->
                    <h5 class="fw-bold mb-3 text-center">
                        <i class="fas fa-list-ul me-2"></i>Categories
                    </h5>



<!-- Display Success Message -->
@if (TempData["SuccessMessage"] != null)
{
    <!-- Success message alert with dismiss button -->
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <!-- Display the success message -->
        <strong>@TempData["SuccessMessage"]</strong>
        <!-- Button to close the alert -->
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Check if the Categories model has data -->
@if (Model.Categories != null && Model.Categories.Any())
{
    <!-- Responsive table container -->
    <div class="table-responsive mx-auto" style="width: 90%;">
        <!-- Dark-themed table -->
        <table class="table table-dark align-middle">
            <!-- Table header -->
            <thead class="table-secondary">
                <tr>
                    <th>Name</th> <!-- Column for category name -->
                    <th>Allocated (Initial)</th> <!-- Column for initial allocated amount -->
                    <th>Allocated (Current)</th> <!-- Column for current allocated amount -->
                    <th class="text-end">Actions</th> <!-- Column for action buttons -->
                </tr>
            </thead>
            <tbody>
                <!-- Iterate through each category in the Categories model -->
                @foreach (var category in Model.Categories)
                {
                    <tr>
                        <!-- Display category name -->
                        <td>@category.Name</td>
                        <!-- Display initial allocated amount formatted as currency -->
                        <td>@category.InitialAllocatedAmount.ToString("C")</td>
                        <!-- Display current allocated amount formatted as currency -->
                        <td>@category.AllocatedAmount.ToString("C")</td>
                        <!-- Action buttons -->
                        <td class="text-end">
                            <!-- Link to view category details -->
                            <a class="btn btn-sm custom-create-btn me-0" 
                               href="@Url.Action("Details", "Category", new { id = category.Id })">
                                <i class="fas fa-eye me-1"></i>View
                            </a>
                            <!-- Link to edit category -->
                            <a class="btn btn-sm custom-edit-btn me-0" 
                               href="@Url.Action("Edit", "Category", new { id = category.Id })">
                                <i class="fas fa-edit me-1"></i>Edit
                            </a>
                            <!-- Form to delete category -->
                            <form asp-action="Delete" 
                                  asp-controller="Category" 
                                  method="post" 
                                  class="d-inline">
                                <!-- Hidden input field for category ID -->
                                <input type="hidden" name="id" value="@category.Id" />
                                <!-- Submit button for deleting the category -->
                                <button type="submit" 
                                        class="btn btn-sm custom-delete-btn me-0">
                                    <i class="fas fa-trash me-1"></i>Delete
                                </button>
                            </form>
                            <!-- Button to toggle transactions for the category -->
                            <button class="btn btn-sm custom-bills-btn ms-0" 
                                    type="button" 
                                    data-bs-toggle="collapse" 
                                    data-bs-target="#transactions-@category.Id">
                                <i class="fas fa-list me-1"></i>Transactions
                            </button>
                        </td>
                    </tr>



                    <!-- Collapsible Transactions Row -->
                    <tr class="collapse" id="transactions-@category.Id">
                        <!-- Span all 4 columns of the parent table for the collapsible content -->
                        <td colspan="4">
                            <!-- Check if the category has transactions -->
                            @if (category.Transactions != null && category.Transactions.Any())
                            {
                                <!-- Responsive container for the transactions table -->
                                <div class="table-responsive mt-3">
                                    <!-- Transactions table with dark theme and bordered rows -->
                                    <table class="table table-dark table-bordered mb-0">
                                        <thead class="table-secondary">
                                            <tr>
                                                <th>Date</th> <!-- Column for transaction date -->
                                                <th>Description</th> <!-- Column for transaction description -->
                                                <th>Amount</th> <!-- Column for transaction amount -->
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Iterate through each transaction in the category -->
                                            @foreach (var transaction in category.Transactions)
                                            {
                                                <tr>
                                                    <!-- Display the transaction date in short format -->
                                                    <td>@transaction.Date.ToShortDateString()</td>
                                                    <!-- Display the transaction description -->
                                                    <td>@transaction.Description</td>
                                                    <!-- Display the transaction amount formatted as currency -->
                                                    <td>@transaction.Amount.ToString("C")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <!-- Display a message if there are no transactions -->
                                <p class="text-light mt-3">No transactions available for this category.</p>
                            }
                        </td>
                    </tr>
                                                        }
                    <!-- End of table displaying categories -->
                    </tbody>
                    </table>
                    </div>
                    }
                    else
                                        {
                        <!-- Display a message if no categories are available -->
                        <div class="alert alert-secondary text-center mt-3" role="alert">
                            <i class="fas fa-exclamation-circle me-2"></i>No categories available.
                        </div>
                    }
                    </div>
                    </div>
                    </div>

                    <!-- Recent Transactions Floating Section -->
                    <div class="card border-0 shadow-sm bg-secondary text-light position-fixed" 
                        style="width: 300px; top: 50px; right: 0px;">
                        <!-- Header for the recent transactions section -->
                        <div class="card-header">
                            <h5 class="fw-bold mb-0">
                                <!-- Icon for recent transactions -->
                                <i class="fas fa-clock text-primary me-2"></i>Recent Transactions
                            </h5>
                        </div>
                        <div class="card-body">
                            <!-- Check if there are recent transactions -->
                            @if (Model.RecentTransactions != null && Model.RecentTransactions.Any())
                            {
                                <!-- List group to display recent transactions -->
                                <ul class="list-group">
                                    <!-- Loop through each recent transaction -->
                                    @foreach (var transaction in Model.RecentTransactions)
                                    {
                                        <li class="list-group-item bg-dark text-light">
                                            <!-- Display transaction description -->
                                            <span class="fw-bold">@transaction.Description</span>
                                            <br />
                                            <!-- Display transaction date and amount formatted as currency -->
                                            <small>@transaction.Date.ToShortDateString() - @transaction.Amount.ToString("C")</small>
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <!-- Message for no recent transactions -->
                                <p class="text-light">No recent transactions available.</p>
                            }
                        </div>
                    </div>

                        </div>
                    </div>