@using System.Linq
@using Microsoft.EntityFrameworkCore
@model BudgetTracker.Models.BudgetWithTasksViewModel

<div class="container">
    <h2>Budgets</h2>

    <!-- Form to Create New Budget -->
    <div class="mb-3">
        <h4>Create New Budget</h4>
        <form asp-action="Create" method="post">
            <div class="row">
                <div class="col-md-4">
                    <input type="text" name="Name" class="form-control" placeholder="Budget Name" required />
                </div>
                <div class="col-md-4">
                    <input type="number" name="TotalAmount" class="form-control" placeholder="Total Amount" step="0.01" required />
                </div>
                <div class="col-md-4">
                    <button type="submit" class="btn btn-primary">Add Budget</button>
                </div>
            </div>
        </form>
    </div>

    <div class="row">
        <!-- Budget Table -->
        <div class="col-md-8">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Total Amount</th>
                        <th>Date Created</th>
                        <th>Remaining Amount</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var budget in Model.Budgets)
                    {
                        <tr>
                            <td>@budget.Name</td>
                            <td>@budget.TotalAmount.ToString("C")</td>
                            <td>@budget.DateCreated.ToShortDateString()</td>
                            <td>@budget.RemainingAmount.ToString("C")</td> <!-- Use model property -->

                            <td>
                                <a class="btn btn-info" href="@Url.Action("Details", "Budget", new { id = budget.Id })">View</a>
                                <a class="btn btn-warning" href="@Url.Action("Edit", "Budget", new { id = budget.Id })">Edit</a>
                                <a class="btn btn-primary" href="@Url.Action("Create", "Category", new { budgetId = budget.Id })">Add Category</a>

                                <!-- Delete Button -->
                                <form asp-action="Delete" method="post" style="display:inline;">
                                    <input type="hidden" name="id" value="@budget.Id" />
                                    <button type="submit" class="btn btn-danger">Delete</button>
                                </form>

                                <!-- Categories Dropdown -->
                                <div class="dropdown mt-2">
                                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton@budget.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                        Categories
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton@budget.Id">
                                        @if (budget.Categories != null && budget.Categories.Any())
                                        {
                                            @foreach (var category in budget.Categories)
                                            {
                                                <li>
                                                    <a class="dropdown-item" href="@Url.Action("Details", "Category", new { id = category.Id })">
                                                        @category.Name - @category.AllocatedAmount.ToString("C")
                                                    </a>
                                                    <a class="dropdown-item text-warning" href="@Url.Action("Edit", "Category", new { id = category.Id })">Edit</a>
                                                </li>
                                            }
                                        }
                                        else
                                        {
                                            <li><span class="dropdown-item-text">No categories available</span></li>
                                        }
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Upcoming Tasks for This Week -->
        <div class="col-md-4">
            <h4>Upcoming Tasks for This Week</h4>

            <a class="btn btn-success mb-3" href="@Url.Action("Index", "Schedule")">Add Task</a>

            <ul class="list-group">
                @if (Model.CurrentWeekTasks != null && Model.CurrentWeekTasks.Any())
                {
                    @foreach (var task in Model.CurrentWeekTasks)
                    {
                        <li class="list-group-item">
                            <strong>@task.Name</strong> - @task.Date.ToShortDateString()
                        </li>
                    }
                }
                else
                {
                    <li class="list-group-item">No tasks for this week</li>
                }
            </ul>
        </div>
    </div>
</div>
