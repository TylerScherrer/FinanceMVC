@using System.Linq
@using Microsoft.EntityFrameworkCore
@model BudgetTracker.Models.BudgetWithTasksViewModel

<div class="container-fluid py-4">
    <div class="row">
        <!-- Left Column: Budgets Section -->
        <div class="col-lg-8 mb-4">
            <!-- Create New Budget Section -->
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Create New Budget</h5>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post" class="row g-3">
                        <div class="col-md-5">
                            <input type="text" name="Name" class="form-control" placeholder="Budget Name" required />
                        </div>
                        <div class="col-md-5">
                            <input type="number" name="TotalAmount" class="form-control" placeholder="Total Amount" step="0.01" required />
                        </div>
                        <div class="col-md-2 d-grid">
                            <button type="submit" class="btn btn-success">Add</button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Budgets Table -->
            <div class="card shadow-sm">
                <div class="card-header bg-dark text-white">
                    <h5 class="mb-0">Budgets</h5>
                </div>
                <div class="card-body p-0">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Name</th>
                                <th>Total</th>
                                <th>Created</th>
                                <th>Remaining</th>
                                <th style="width:25%">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var budget in Model.Budgets)
                            {
                                <tr>
                                    <td class="align-middle">@budget.Name</td>
                                    <td class="align-middle">@budget.TotalAmount.ToString("C")</td>
                                    <td class="align-middle">@budget.DateCreated.ToShortDateString()</td>
                                    <td class="align-middle">@budget.RemainingAmount.ToString("C")</td>
                                    <td class="align-middle">
                                        <div class="btn-group dropend">
                                            <a class="btn btn-sm btn-info" href="@Url.Action("Details", "Budget", new { id = budget.Id })">View</a>
                                            <a class="btn btn-sm btn-warning" href="@Url.Action("Edit", "Budget", new { id = budget.Id })">Edit</a>
                                            <a class="btn btn-sm btn-primary" href="@Url.Action("Create", "Category", new { budgetId = budget.Id })">+Category</a>
                                            <button class="btn btn-sm btn-danger" type="button" data-bs-toggle="modal" data-bs-target="#deleteBudgetModal@budget.Id">Delete</button>
                                            
                                            <button class="btn btn-sm btn-secondary dropdown-toggle" data-bs-toggle="dropdown"></button>
                                            <ul class="dropdown-menu">
                                                @if (budget.Categories != null && budget.Categories.Any())
                                                {
                                                    @foreach (var category in budget.Categories)
                                                    {
                                                        <li class="px-3 py-2">
                                                            <strong>@category.Name</strong> - @category.AllocatedAmount.ToString("C")
                                                            <div class="mt-1">
                                                                <a class="text-decoration-none me-2" href="@Url.Action("Details", "Category", new { id = category.Id })">View</a>
                                                                <a class="text-decoration-none text-warning" href="@Url.Action("Edit", "Category", new { id = category.Id })">Edit</a>
                                                            </div>
                                                        </li>
                                                    }
                                                }
                                                else
                                                {
                                                    <li class="dropdown-item-text">No categories available</li>
                                                }
                                            </ul>
                                        </div>

                                        <!-- Delete Budget Modal -->
                                        <div class="modal fade" id="deleteBudgetModal@budget.Id" tabindex="-1" aria-hidden="true">
                                            <div class="modal-dialog modal-dialog-centered">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title">Delete Budget</h5>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <div class="modal-body">
                                                        Are you sure you want to delete the budget "<strong>@budget.Name</strong>"?
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                        <form asp-action="Delete" method="post" class="d-inline">
                                                            <input type="hidden" name="id" value="@budget.Id" />
                                                            <button type="submit" class="btn btn-danger">Yes, Delete</button>
                                                        </form>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- End Modal -->
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Right Column: Tasks -->
        <div class="col-lg-4">

                    <!-- Upcoming Tasks for This Week -->
                <div class="card mb-4 shadow-sm">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">Upcoming Tasks This Week</h5>
            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between mb-3">
                    <div><strong>Tasks</strong></div>
                    <a class="btn btn-sm btn-light" href="@Url.Action("Index", "Schedule")">Add Task</a>
                </div>
                <ul class="list-group list-group-flush">
                    @if (Model.CurrentWeekTasks != null && Model.CurrentWeekTasks.Any())
                    {
                            @foreach (var task in Model.CurrentWeekTasks)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <span>
                                        <strong>@task.Name</strong> 
                                        <small class="text-muted">@task.Date.ToShortDateString()</small>
                                    </span>
                                    <form asp-action="DeleteScheduledTask" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@task.Id" />
                                        <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                                    </form>
                                </li>
                            }

                        
                    }
                    else
                    {
                        <li class="list-group-item">No tasks for this week</li>
                    }
                </ul>
            </div>
        </div>


            <!-- Today's Tasks (To-Do) -->
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">Today's Tasks</h5>
                </div>
                <div class="card-body p-0">
                    <table class="table table-sm mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Task</th>
                                <th>Due</th>
                                <th>Status</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var task in Model.TodayTasks)
                            {
                                <tr>
                                    <td>@task.Name</td>
                                    <td>@task.DueDate.ToShortDateString()</td>
                                    <td>@(task.IsCompleted ? "Completed" : "Pending")</td>
                                    <td class="text-end">
                                        <form method="post" asp-action="MarkComplete" asp-controller="ToDo" asp-route-id="@task.Id" class="d-inline">
                                            <button type="submit" class="btn btn-success btn-sm">✔</button>
                                        </form>
                                        <form method="post" asp-action="Delete" asp-controller="ToDo" asp-route-id="@task.Id" class="d-inline">
                                            <button type="submit" class="btn btn-danger btn-sm">✖</button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Daily Schedule Section -->
    <div class="card shadow-sm mt-4">
        <div class="card-header bg-secondary text-white">
            <h5 class="mb-0">Organize My Day</h5>
        </div>
        <div class="card-body p-0">
            <table class="table table-bordered mb-0">
                <thead class="table-light">
                    <tr>
                        <th style="width:15%">Time</th>
                        <th>Task</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int hour = 9; hour <= 17; hour++)
                    {
                        <tr>
                            <td>
                                @(hour <= 12 ? $"{hour} a.m." : $"{hour - 12} p.m.")
                            </td>
                            <td>
                                @{
                                    // Find the scheduled task for the current hour
                                    var scheduledTask = Model.DailySchedules?
                                        .FirstOrDefault(ds => ds.Hour == hour);
                                }
                                @if (scheduledTask != null)
                                {
                                    <span class="fw-bold">@scheduledTask.Task.Name</span>
                                }
                                else
                                {
                                    <!-- Dropdown to assign a task -->
                                    <form method="post" asp-action="AssignTaskToTime" asp-controller="ToDo" class="row g-2 align-items-center">
                                        <div class="col-8">
                                            <select name="taskId" class="form-select form-select-sm">
                                                <option value="">-- Select Task --</option>
                                                @foreach (var task in Model.TodayTasks)
                                                {
                                                    <option value="@task.Id">@task.Name</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="col-4 d-grid">
                                            <input type="hidden" name="hour" value="@hour" />
                                            <button type="submit" class="btn btn-primary btn-sm">Assign</button>
                                        </div>
                                    </form>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
