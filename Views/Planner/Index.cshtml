@model BudgetTracker.Models.BudgetWithTasksViewModel
@using System.Linq;

<div class="container-fluid bg-dark text-light py-4">
<h1 class="fw-bold text-center mb-4">Organize My Day</h1>
<h3 class="text-center">Schedule for @Model.SelectedDate.ToString("yyyy-MM-dd")</h3>



    <div id="calendar"></div>

    <script>
function generateCalendar(year, month) {
    const calendar = document.getElementById('calendar');
    const firstDay = new Date(year, month, 1).getDay();
    const daysInMonth = new Date(year, month + 1, 0).getDate();

    let calendarHTML = '<table class="table table-bordered">';
    calendarHTML += '<thead><tr><th>Sun</th><th>Mon</th><th>Tue</th><th>Wed</th><th>Thu</th><th>Fri</th><th>Sat</th></tr></thead>';
    calendarHTML += '<tbody><tr>';

    for (let i = 0; i < firstDay; i++) {
        calendarHTML += '<td></td>';
    }

    for (let day = 1; day <= daysInMonth; day++) {
        if ((firstDay + day - 1) % 7 === 0) {
            calendarHTML += '</tr><tr>';
        }
        calendarHTML += `<td class='clickable' onclick='selectDate(${year}, ${month}, ${day})'>${day}</td>`;
    }

    calendarHTML += '</tr></tbody></table>';
    calendar.innerHTML = calendarHTML;
}

function selectDate(year, month, day) {
    const selectedDate = `${year}-${(month + 1).toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;
    window.location.href = `/Planner?date=${selectedDate}`;
}



document.addEventListener('DOMContentLoaded', function () {
    const today = new Date();
    generateCalendar(today.getFullYear(), today.getMonth());
});

    </script>

    <div class="card glass-panel mt-5 text-light">
        <div class="card-body">
            <h5 class="fw-bold mb-3 text-white">
                <i class="fas fa-clock me-2"></i>Daily Schedule
            </h5>
            <div class="table-responsive">
                <table class="table table-dark table-bordered border-secondary align-middle mb-0">
                    <thead>
                        <tr>
                            <th style="width:15%">Time</th>
                            <th>Task</th>
                            <th style="width:10%">Action</th>
                        </tr>
                    </thead>
<tbody>
    @for (int hour = 8; hour <= 20; hour++) // Loop from 8:00 AM to 8:00 PM
    {
        var scheduledTask = Model.DailySchedules?
            .FirstOrDefault(ds => ds.Hour == hour);

        <tr>
            <td class="fw-semibold">
                @(hour <= 12 ? $"{hour} a.m." : $"{hour - 12} p.m.")
            </td>
            <td>
                @if (scheduledTask != null)
                {
                    <span class="fw-bold text-white">
                        @scheduledTask.Task.Name
                    </span>
                }
                else
                {
                    <form method="post" asp-action="AssignTaskToTime" asp-controller="ToDo" class="row g-2 align-items-center">
                        <input type="hidden" name="hour" value="@hour" />
                        <input type="hidden" name="selectedDate" value="@Model.SelectedDate.ToString("yyyy-MM-dd")" />
                        <div class="col-8">
                            <select name="taskId" class="form-select form-select-sm bg-dark text-light border-secondary">
                                <option value="">-- Select Task --</option>
                                @foreach (var task in Model.TodayTasks)
                                {
                                    <option value="@task.Id">@task.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-4 d-grid">
                            <button type="submit" class="btn btn-sm custom-create-btn fw-semibold">Assign</button>
                        </div>
                    </form>
                }
            </td>
            <td>
                @if (scheduledTask != null)
                {
                    <form method="post"
                          asp-action="UnassignTask"
                          asp-controller="ToDo"
                          class="d-inline">
                        <input type="hidden" name="taskId" value="@scheduledTask.Task.Id" />
                        <input type="hidden" name="hour" value="@hour" />
                        <button type="submit" class="btn btn-sm btn-outline-danger">
                            Unassign
                        </button>
                    </form>
                }
            </td>
        </tr>
    }
</tbody>

                </table>
            </div>
        </div>
    </div>
</div>
