@model BudgetTracker.Models.BudgetWithTasksViewModel
@using System.Linq;



<div class="container-fluid bg-dark text-light py-4">
    <h1 class="fw-bold text-center mb-4">Organize My Day</h1>

    <div class="card glass-panel text-light">
        <div class="card-body">
            <h5 class="fw-bold mb-3 text-white">
                <i class="fas fa-clock me-2"></i>Plan Your Day
            </h5>
            <div class="table-responsive">
                <table class="table table-dark table-bordered border-secondary align-middle mb-0">
                    <thead>
                        <tr>
                            <th style="width:15%">Time</th>
                            <th>Task</th>
                            <th style="width:10%">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int hour = 8; hour <= 20; hour++) // Loop from 8:00 AM to 8:00 PM
                        {
                            for (int minute = 0; minute <= 30; minute += 30) // Handle 0 and 30 minutes
                            {
                                var timeLabel = minute == 0
                                    ? $"{(hour <= 12 ? hour : hour - 12)}:00 {(hour < 12 ? "a.m." : "p.m.")}"
                                    : $"{(hour <= 12 ? hour : hour - 12)}:30 {(hour < 12 ? "a.m." : "p.m.")}";

                                var scheduledTask = Model.DailySchedules?
                                    .FirstOrDefault(ds => ds.Hour == hour && ds.Minute == minute);

                                <tr>
                                    <td class="fw-semibold">@timeLabel</td>
                                    <td>
                                        @if (scheduledTask != null)
                                        {
                                            <span class="fw-bold text-white">@scheduledTask.Task.Name</span>
                                        }
                                        else
                                        {
<form method="post" asp-action="AssignTaskToTime" asp-controller="ToDo" class="row g-2 align-items-center">
    <input type="hidden" name="hour" value="@hour" />
    <input type="hidden" name="minute" value="@minute" />
    <div class="col-8">
        <select name="taskId" class="form-select form-select-sm bg-dark text-light border-secondary">
            <option value="">-- Select Task --</option>
            @foreach (var task in Model.TodayTasks)
            {
                <option value="@task.Id">@task.Name</option>
            }
        </select>
    </div>
    <div class="col-4 d-grid">
        <button type="submit" class="btn btn-sm custom-create-btn fw-semibold">Assign</button>
    </div>
</form>

                                        }
                                    </td>
                                    <td>
                                        @if (scheduledTask != null)
                                        {
                                            <form method="post"
                                                  asp-action="UnassignTask"
                                                  asp-controller="ToDo"
                                                  class="d-inline">
                                                <input type="hidden" name="taskId" value="@scheduledTask.Task.Id" />
                                                <input type="hidden" name="hour" value="@hour" />
                                                <input type="hidden" name="minute" value="@minute" />
                                                <button type="submit" class="btn btn-sm custom-delete-btn ">
                                                    Unassign
                                                </button>
                                            </form>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
<div class="date-picker-container">
    <label for="organize-date">Select a Date:</label>
    <<input type="date" id="organize-date" name="organizeDate" class="form-control"
       value="@ViewBag.SelectedDate" onchange="updateSchedule()" />

</div>

</div>
<script>
    function updateSchedule() {
        const selectedDate = document.getElementById('organize-date').value;
        if (selectedDate) {
            window.location.href = `/Planner/Index?date=${selectedDate}`;
        }
    }
</script>
